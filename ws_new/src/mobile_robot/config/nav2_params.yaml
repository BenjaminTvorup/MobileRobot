map_server:
  ros__parameters:
    use_sim_time: true
    yaml_filename: /home/thomas/MobileRobot/ws_new/src/mobile_robot/map/my_map1.yaml
    topic_name: "map"
    frame_id: "map"
    service_introspection_mode: "disabled"

map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    service_introspection_mode: "disabled"

costmap_filter_info_server:
  ros__parameters:
    type: 1
    filter_info_topic: "costmap_filter_info"
    mask_topic: "filter_mask"
    base: 0.0
    multiplier: 0.25   

amcl:
  ros__parameters:
    set_initial_pose: true
    initial_pose_x: 0.0    # Starting X position in the map
    initial_pose_y: 0.0    # Starting Y position in the map
    initial_pose_yaw: 0.0  # Starting orientation (in radians)
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_footprint"
    service_introspection_mode: "disabled"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan
    map_topic: map
    set_initial_pose: false
    always_reset_initial_pose: false
    first_map_only: false
    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0



planner_server:
  ros__parameters:
    planner_plugins: ["GridBased"]
    use_sim_time: True
    use_global_costmap: false
    transform_tolerance: 2.0

    GridBased:
      plugin: "nav2_smac_planner::SmacPlanner2D"
      downsample_costmap: false           
      downsampling_factor: 1              
      tolerance: 0.25                     
      allow_unknown: true                 
      max_iterations: 1000000             
      max_on_approach_iterations: 1000    
      max_planning_time: 5.0              
      motion_model_for_search: "DUBIN"    
      angle_quantization_bins: 72         
      analytic_expansion_ratio: 3.5       
      analytic_expansion_max_length: 3.0  
      analytic_expansion_max_cost: 200.0  
      analytic_expansion_max_cost_override: false 
      minimum_turning_radius: 0.10    
      reverse_penalty: 2.0                
      change_penalty: 0.0                 
      non_straight_penalty: 1.0         
      cost_penalty: 1.3              
      retrospective_penalty: 0.015
      lookup_table_size: 20.0             
      cache_obstacle_heuristic: false     
      debug_visualizations: false         
      use_quadratic_cost_penalty: False
      downsample_obstacle_heuristic: True
      allow_primitive_interpolation: False
      smooth_path: True

      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2

controller_server:
  ros__parameters:
    use_sim_time: True
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    progress_check_plugin: "progress_checker"
    goal_checker_plugins: ["goal_checker"]
    progress_checker_plugins: ["progress_checker"]
    controller_plugins: ["FollowPath"]  
    # speed_limit_topic: "/speed_limit"
    current_goal_checker:     "goal_checker"
    current_progress_checker: "progress_checker"

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    goal_checker:  
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.5
      yaw_goal_tolerance: 0.5
      stateful: True
    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.5 
      lookahead_dist: 0.8
      min_lookahead_dist: 0.4
      max_lookahead_dist: 1.0
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 2.2
      transform_tolerance: 2.0
      use_velocity_scaled_lookahead_dist: true
      min_approach_linear_velocity: 0.2
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.5
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.5
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.1
      regulated_linear_scaling_min_speed: 0.2
      use_rotate_to_heading: false
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 4.0
      max_robot_pose_search_dist: 10.0



bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: odom
    bt_loop_duration: 10
    filter_duration: 0.3
    default_server_timeout: 20
    wait_for_service_timeout: 1000
    action_server_result_timeout: 900.0
    service_introspection_mode: "disabled"
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
      enable_groot_monitoring: false
      groot_server_port: 1667
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
      enable_groot_monitoring: false
      groot_server_port: 1669
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.

    # plugin_lib_names is used to add custom BT plugins to the executor (vector of strings).
    # Built-in plugins are added automatically
    # plugin_lib_names: []

    error_code_name_prefixes:
      - assisted_teleop
      - backup
      - compute_path
      - dock_robot
      - drive_on_heading
      - follow_path
      - nav_thru_poses
      - nav_to_pose
      - route
      - spin
      - smoother
      - undock_robot
      - wait

# The yaml_filename does not need to be specified since it going to be set by defaults in launch.
# If you'd rather set it in the yaml, remove the default "map" value in the launch file(s).
# file & provide full path to map below. If CLI map configuration or launch default is provided, that will be used.
map_server:
  ros__parameters:
    use_sim_time: true
    yaml_filename: /home/thomas/MobileRobot/ws_new/src/mobile_robot/map/my_map1.yaml

map_saver:
  ros__parameters:
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True
    service_introspection_mode: "disabled"



local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom      #  fixed
      robot_base_frame: base_link
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      footprint: "[[0.859, 0.5], [0.859, -0.5], [-0.859, -0.5], [-0.859, 0.5]]"
      footprint_padding: 0.01
      plugins: ["voxel_layer", "inflation_layer"]
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: true
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55


global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: odom
      robot_base_frame: base_link
      resolution: 0.05
      footprint: "[[0.859, 0.5], [0.859, -0.5], [-0.859, -0.5], [-0.859, 0.5]]"
      footprint_padding: 0.01
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        enabled: false  
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55



waypoint_follower:
  ros__parameters:
    use_sim_time: False
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

smoother_server:
  ros__parameters:
    use_sim_time: False
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True


velocity_smoother:
  ros__parameters:
    use_sim_time: False
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [3.2, 0.0, 10.0]
    min_velocity: [-3.2, 0.0, -10.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odometry/filtered"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0




# local_costmap:
#   local_costmap:
#     ros__parameters:
#       update_frequency: 5.0
#       publish_frequency: 2.0
#       global_frame: odom
#       robot_base_frame: base_link
#       rolling_window: true
#       width: 10.0
#       height: 10.0
#       resolution: 0.05
#       robot_radius: 0.22
#       plugins: ["voxel_layer", "inflation_layer"]
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 3.0
#         inflation_radius: 0.70
#       voxel_layer:
#         plugin: "nav2_costmap_2d::VoxelLayer"
#         enabled: True
#         publish_voxel_map: True
#         origin_z: 0.0
#         z_resolution: 0.05
#         z_voxels: 16
#         max_obstacle_height: 2.0
#         mark_threshold: 0
#         observation_sources: scan
#         scan:
#           # A relative topic will be appended to the parent of the local_costmap namespace.
#           # For example:
#           #   * User chosen namespace is `tb4`.
#           #   * User chosen topic is `scan`.
#           #   * Topic will be remapped to `/tb4/scan` without `local_costmap`.
#           #   * Use global topic `/scan` if you do not wish the node namespace to apply
#           topic: scan
#           max_obstacle_height: 2.0
#           clearing: True
#           marking: True
#           data_type: "LaserScan"
#           raytrace_max_range: 3.0
#           raytrace_min_range: 0.0
#           obstacle_max_range: 2.5
#           obstacle_min_range: 0.0
#       always_send_full_costmap: True
#       service_introspection_mode: "disabled"

# global_costmap:
#   global_costmap:
#     ros__parameters:
#       update_frequency: 1.0
#       publish_frequency: 1.0
#       global_frame: map
#       robot_base_frame: base_link
#       robot_radius: 0.22
#       resolution: 0.05
#       track_unknown_space: true
#       plugins: ["obstacle_layer", "inflation_layer"]
#       obstacle_layer:
#         plugin: "nav2_costmap_2d::ObstacleLayer"
#         enabled: True
#         observation_sources: scan
#         scan:
#           # A relative topic will be appended to the parent of the global_costmap namespace.
#           # For example:
#           #   * User chosen namespace is `tb4`.
#           #   * User chosen topic is `scan`.
#           #   * Topic will be remapped to `/tb4/scan` without `global_costmap`.
#           #   * Use global topic `/scan` if you do not wish the node namespace to apply
#           topic: scan
#           max_obstacle_height: 2.0
#           clearing: True
#           marking: True
#           data_type: "LaserScan"
#           raytrace_max_range: 3.0
#           raytrace_min_range: 0.0
#           obstacle_max_range: 2.5
#           obstacle_min_range: 0.0
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 3.0
#         inflation_radius: 0.7
#       always_send_full_costmap: True
#       service_introspection_mode: "disabled"
